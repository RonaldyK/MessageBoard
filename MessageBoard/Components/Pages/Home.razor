@page "/"
@using MessageBoard.Application.Interfaces
@using MessageBoard.Domain.Entities
@inject IMessageRepository MessageRepository

<PageTitle>Message Board</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="pa-4">
	<MudPaper Class="pa-4 mb-4" Elevation="3">
		<EditForm Enhance Model="Message" OnValidSubmit="AddMessage" FormName="AddMessageForm">
			<DataAnnotationsValidator/>
			<MudGrid>
				<MudItem xs="12">
					<MudCard Elevation="2">
						<MudCardContent>
							<MudTextField T="string" Label="Title" Variant="@Variant.Outlined" HelperText="Max. 100 characters" Class="mb-3"
							@bind-Value="Message.Title" For="@(() => Message.Title)"/>
							<MudTextField T="string" Label="Caption" Variant="@Variant.Outlined" AutoGrow Lines="3" HelperText="Max. 500 characters" Class="mb-3"
							@bind-Value="Message.Caption" For="@(() => Message.Caption)"/>
						</MudCardContent>
						<MudCardActions>
							<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-2" FullWidth="true">Post Message</MudButton>
						</MudCardActions>
					</MudCard>
				</MudItem>
			</MudGrid>
		</EditForm>
	</MudPaper>

	@* Display messages *@
	
		@if (Messages.Count == 0)
		{
			<MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Class="mt-8">
				<MudProgressCircular Color="Color.Primary" Indeterminate="true" />
				<MudText Typo="Typo.body2" Class="mt-4">Loading messages...</MudText>
			</MudStack>
		}
		else
		{

			<MudStack Spacing="4">
				@foreach (var message in Messages)
				{
						<MudCard Elevation="2">
							<MudCardHeader>
								<CardHeaderAvatar>
									<MudAvatar Color="Color.Primary">@message.Id</MudAvatar>
								</CardHeaderAvatar>
								<CardHeaderContent>
									<MudText Typo="Typo.subtitle1">@message.Title</MudText>
									<MudText Typo="Typo.caption">Posted @message.CreatedAt</MudText>
								</CardHeaderContent>
								@* <CardHeaderActions>
					<MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" />
				</CardHeaderActions> *@
							</MudCardHeader>
							@* <MudCardMedia Image="images/pilars.jpg" Height="250" /> *@
							<MudCardContent>
								<MudText Typo="Typo.body2">@message.Caption</MudText>
							</MudCardContent>
							@* <MudCardActions>
			<MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="Color.Default" />
			<MudIconButton Icon="@Icons.Material.Filled.Share" Color="Color.Default" />
		</MudCardActions> *@
						</MudCard>
				}
			</MudStack>

		}
</MudContainer>


@code
{
	[SupplyParameterFromForm] private Message Message { get; set; } = new();

	private List<Message> Messages { get; set; } = [];

	private async Task LoadMessagesAsync()
	{
		Messages = await MessageRepository.GetAllAsync();
	}

	protected override async Task OnInitializedAsync()
	{
		await LoadMessagesAsync();
	}

	private async Task AddMessage()
	{
		await MessageRepository.AddAsync(Message);

		Message = new Message();
		await LoadMessagesAsync();
	}

}
